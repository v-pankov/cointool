// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import (
	context "context"

	entity "github.com/vdrpkv/cointool/internal/domain/entity"

	mock "github.com/stretchr/testify/mock"
)

// FiatCurrencyClient is an autogenerated mock type for the FiatCurrencyClient type
type FiatCurrencyClient struct {
	mock.Mock
}

// RecognizeFiatCurrency provides a mock function with given fields: ctx, symbol
func (_m *FiatCurrencyClient) RecognizeFiatCurrency(ctx context.Context, symbol entity.CurrencySymbol) (bool, error) {
	ret := _m.Called(ctx, symbol)

	var r0 bool
	if rf, ok := ret.Get(0).(func(context.Context, entity.CurrencySymbol) bool); ok {
		r0 = rf(ctx, symbol)
	} else {
		r0 = ret.Get(0).(bool)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, entity.CurrencySymbol) error); ok {
		r1 = rf(ctx, symbol)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewFiatCurrencyClient interface {
	mock.TestingT
	Cleanup(func())
}

// NewFiatCurrencyClient creates a new instance of FiatCurrencyClient. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewFiatCurrencyClient(t mockConstructorTestingTNewFiatCurrencyClient) *FiatCurrencyClient {
	mock := &FiatCurrencyClient{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
