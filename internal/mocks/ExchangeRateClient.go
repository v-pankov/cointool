// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import (
	context "context"

	entity "github.com/vdrpkv/cointool/internal/domain/entity"

	mock "github.com/stretchr/testify/mock"
)

// ExchangeRateClient is an autogenerated mock type for the ExchangeRateClient type
type ExchangeRateClient struct {
	mock.Mock
}

// GetExchangeRate provides a mock function with given fields: ctx, from, to
func (_m *ExchangeRateClient) GetExchangeRate(ctx context.Context, from entity.CurrencySymbol, to entity.CurrencySymbol) (entity.ExchangeRate, error) {
	ret := _m.Called(ctx, from, to)

	var r0 entity.ExchangeRate
	if rf, ok := ret.Get(0).(func(context.Context, entity.CurrencySymbol, entity.CurrencySymbol) entity.ExchangeRate); ok {
		r0 = rf(ctx, from, to)
	} else {
		r0 = ret.Get(0).(entity.ExchangeRate)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, entity.CurrencySymbol, entity.CurrencySymbol) error); ok {
		r1 = rf(ctx, from, to)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewExchangeRateClient interface {
	mock.TestingT
	Cleanup(func())
}

// NewExchangeRateClient creates a new instance of ExchangeRateClient. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewExchangeRateClient(t mockConstructorTestingTNewExchangeRateClient) *ExchangeRateClient {
	mock := &ExchangeRateClient{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
